import {
    ChipParams,
    RatingCategory,
    RatingChipCommon,
    RatingForm,
    RatingFormCode,
    RatingItem,
    RatingScore,
    TextParams,
} from '../interfaces'

export class RatingUtils {
    private readonly chipCodeToValueDefaultMap: Record<RatingChipCommon, string> = {
        [RatingChipCommon.RegistryUnavailable]: '–†–µ—î—Å—Ç—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π',
        [RatingChipCommon.IncorrectData]: '–ù–µ–∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ',
        [RatingChipCommon.MoreOneTry]: '–ù–µ –∑ 1 —Ä–∞–∑—É –≤–∏–π—à–ª–æ',
        [RatingChipCommon.Other]: '–Ü–Ω—à–µ',
        [RatingChipCommon.LongServiceSearch]: '–î–æ–≤–≥–æ —à—É–∫–∞–≤ –ø–æ—Å–ª—É–≥—É',
        [RatingChipCommon.LongApplicationProcessing]: '–ó–∞—è–≤–∫—É –æ–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞–ª–∏ –¥–æ–≤–≥–æ',
        [RatingChipCommon.LicensePlateSelection]: '–í–∏–±—ñ—Ä –Ω–æ–º–µ—Ä–Ω–æ–≥–æ –∑–Ω–∞–∫–∞',
        [RatingChipCommon.LongRegistration]: '–î–æ–≤–≥–æ —Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏',
        [RatingChipCommon.PaymentIssues]: '–ü—Ä–æ–±–ª–µ–º–∏ –∑ –æ–ø–ª–∞—Ç–æ—é',
        [RatingChipCommon.Delivery]: '–î–æ—Å—Ç–∞–≤–∫–∞',
        [RatingChipCommon.ComprehensibleText]: '–ó—Ä–æ–∑—É–º—ñ–ª—ñ —Ç–µ–∫—Å—Ç–∏',
        [RatingChipCommon.NotComprehensibleText]: '–ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–∏–π —Ç–µ–∫—Å—Ç',
        [RatingChipCommon.EasyFast]: '–õ–µ–≥–∫–æ —ñ —à–≤–∏–¥–∫–æ',
        [RatingChipCommon.NotEnoughHints]: '–ú–∞–ª–æ –ø—ñ–¥–∫–∞–∑–æ–∫',
        [RatingChipCommon.EnoughHints]: '–í–¥–æ—Å—Ç–∞–ª—å –ø—ñ–¥–∫–∞–∑–æ–∫',
        [RatingChipCommon.Design]: '–î–∏–∑–∞–π–Ω',
        [RatingChipCommon.WasWaitingForService]: '–î–∞–≤–Ω–æ —á–µ–∫–∞–≤ –Ω–∞ —Ü—é –ø–æ—Å–ª—É–≥—É',
        [RatingChipCommon.BadDesign]: '–î–∏–∑–∞–π–Ω',
        [RatingChipCommon.PostOfficeInteraction]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ –ø–æ—à—Ç–æ—é',
        [RatingChipCommon.UsefulService]: '–ö–æ—Ä–∏—Å–Ω–∞ –ø–æ—Å–ª—É–≥–∞',
        [RatingChipCommon.SeveralPaymentAttempts]: '–ù–µ –∑ 1 —Ä–∞–∑—É –æ–ø–ª–∞—Ç–∏–ª–∏',
        [RatingChipCommon.SigningError]: '–ü–æ–º–∏–ª–∫–∞ –∑ –ø—ñ–¥–ø–∏—Å–∞–Ω–Ω—è–º',
        [RatingChipCommon.LicenseWasNotDisplayed]: '–ù–µ –≤—ñ–¥–æ–±—Ä–∞–∑–∏–ª–æ—Å—å –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è',
        [RatingChipCommon.AddressError]: '–ü–æ–º–∏–ª–∫–∞ –∑ –∞–¥—Ä–µ—Å–æ—é',
        [RatingChipCommon.DigitalDocument]: '–¶–∏—Ñ—Ä–æ–≤–∏–π –¥–æ–∫—É–º–µ–Ω—Ç',
        [RatingChipCommon.UntimelyCert]: '–í–∏—Ç—è–≥ –Ω–µ –ø—Ä–∏–π—à–æ–≤ –∑–∞ 30 –¥–Ω—ñ–≤',
        [RatingChipCommon.GotError]: '–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞',
        [RatingChipCommon.GeolocationNotConfirmed]: '–ù–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É–≤–∞–ª–∞—Å—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—è',
        [RatingChipCommon.StreetMissing]: '–í—ñ–¥—Å—É—Ç–Ω—è –º–æ—è –∞–¥—Ä–µ—Å–∞',
        [RatingChipCommon.GotRefuse]: '–û—Ç—Ä–∏–º—É—é –≤—ñ–¥–º–æ–≤—É',
        [RatingChipCommon.AutomaticService]: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–æ—Å–ª—É–≥–∞',
        [RatingChipCommon.NeededHelp]: '–ü–æ—Ç—Ä—ñ–±–Ω–∞ –±—É–ª–∞ –¥–æ–ø–æ–º–æ–≥–∞',
        [RatingChipCommon.MissingData]: '–ù–µ –∑–Ω–∞–π—à–ª–∏ –º–æ—ó –¥–∞–Ω—ñ',
        [RatingChipCommon.EmploymentCenterInteraction]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ —Ü–µ–Ω—Ç—Ä–æ–º –∑–∞–π–Ω—è—Ç–æ—Å—Ç—ñ',
        [RatingChipCommon.NoNotification]: '–ù–µ–º–∞—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è',
        [RatingChipCommon.PushNotReceived]: '–ù–µ –ø—Ä–∏–π—à–æ–≤ –ø—É—à',
        [RatingChipCommon.PaymentFee]: '–û–ø–ª–∞—Ç–∞ –∑ –∫–æ–º—ñ—Å—ñ—î—é',
        [RatingChipCommon.PaymentOptions]: '–î–µ–∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –æ–ø–ª–∞—Ç–∏',
        [RatingChipCommon.PaymentProcessing]: '–û–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –æ–ø–ª–∞—Ç–∏',
        [RatingChipCommon.FastPayment]: '–®–≤–∏–¥–∫–æ –æ–ø—Ä–∞—Ü—é–≤–∞–ª–∏ –æ–ø–ª–∞—Ç—É',
        [RatingChipCommon.InconvenientPlayer]: '–ù–µ–∑—Ä—É—á–Ω–∏–π –ø–ª–µ—î—Ä',
        [RatingChipCommon.SlowLoading]: '–ü–æ–≤—ñ–ª—å–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è',
        [RatingChipCommon.NotEnoughRadioWaves]: '–ú–∞–ª–æ —Ä–∞–¥—ñ–æ—Ö–≤–∏–ª—å',
        [RatingChipCommon.NotEnoughChannels]: '–ú–∞–ª–æ –∫–∞–Ω–∞–ª—ñ–≤',
        [RatingChipCommon.NotTheFirstTimePayment]: '–ù–µ –∑ 1 —Ä–∞–∑—É –æ–ø–ª–∞—Ç–∏–ª–∏',
        [RatingChipCommon.Convenient]: '–ó—Ä—É—á–Ω–æ',
        [RatingChipCommon.Inconvenient]: '–ù–µ–∑—Ä—É—á–Ω–æ',
        [RatingChipCommon.IntuitiveInterface]: '–ó—Ä–æ–∑—É–º—ñ–ª–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
        [RatingChipCommon.NoTariffing]: '–í—ñ–¥—Å—É—Ç–Ω—è —Ç–∞—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è',
        [RatingChipCommon.NoTVProgram]: '–ù–µ–º–∞—î —Ç–µ–ª–µ–ø—Ä–æ–≥—Ä–∞–º–∏',
        [RatingChipCommon.Mobility]: '–í—Å–µ —É —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ñ',
        [RatingChipCommon.BadConditions]: '–ù–µ –ø—ñ–¥—Ö–æ–¥—è—Ç—å —É–º–æ–≤–∏',
        [RatingChipCommon.LostPayment]: '–ë–æ—é—Å—è, —â–æ –æ–ø–ª–∞—Ç–∞ –∑–∞–≥—É–±–∏—Ç—å—Å—è',
        [RatingChipCommon.VehicleLicenseIsStillActive]: '–î–æ—Å—ñ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç',
        [RatingChipCommon.FrequentUse]: '–ß–∞—Å—Ç–æ –∫–æ—Ä–∏—Å—Ç—É—é—Å—è',
        [RatingChipCommon.InteractionWithServiceCenter]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ —Å–µ—Ä–≤—ñ—Å–Ω–∏–º —Ü–µ–Ω—Ç—Ä–æ–º',
        [RatingChipCommon.BadInteractionWithServiceCenter]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ —Å–µ—Ä–≤—ñ—Å–Ω–∏–º —Ü–µ–Ω—Ç—Ä–æ–º',
        [RatingChipCommon.DemocracyInSmartphone]: '–î–µ–º–æ–∫—Ä–∞—Ç—ñ—è –≤ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ñ',
        [RatingChipCommon.DownloadSolutionFile]: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É —Ä—ñ—à–µ–Ω–Ω—è',
        [RatingChipCommon.AddMeetingCalendar]: '–î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞—Å—ñ–¥–∞–Ω–Ω—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä',
        [RatingChipCommon.NoFineCame]: '–ù–µ –ø—Ä–∏–π—à–æ–≤ —à—Ç—Ä–∞—Ñ',
        [RatingChipCommon.TakesALongToLoad]: '–î–æ–≤–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
        [RatingChipCommon.IrrelevantInformation]: '–ù–µ–∞–∫—Ç—É–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
        [RatingChipCommon.AlwayRelevantInformation]: '–ó–∞–≤–∂–¥–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
        [RatingChipCommon.NotUnderstandingWhatNext]: '–ù–µ —Ä–æ–∑—É–º—ñ—é, —â–æ –±—É–¥–µ –¥–∞–ª—ñ',
        [RatingChipCommon.WrongfulRefusal]: '–ù–µ–ø—Ä–∞–≤–æ–º—ñ—Ä–Ω–∞ –≤—ñ–¥–º–æ–≤–∞',
        [RatingChipCommon.UploadingPhoto]: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ',
        [RatingChipCommon.LimitedSelectionCities]: '–û–±–º–µ–∂–µ–Ω–∏–π –≤–∏–±—ñ—Ä –º—ñ—Å—Ç',
        [RatingChipCommon.BadPartnersInteraction]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏',
        [RatingChipCommon.ContributionVictory]: '–í–Ω–µ—Å–æ–∫ —É –ø–µ—Ä–µ–º–æ–≥—É',
        [RatingChipCommon.PartnersInteraction]: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏',
    }

    private readonly chipLabelMap: Record<RatingScore, string> = {
        [RatingScore.Awful]: '–©–æ –∑–∞—Å–º—É—Ç–∏–ª–æ?',
        [RatingScore.Bad]: '–©–æ –∑–∞—Å–º—É—Ç–∏–ª–æ?',
        [RatingScore.Ok]: '–ù–∞ —â–æ –∫–æ–º–∞–Ω–¥—ñ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É?',
        [RatingScore.Good]: '–©–æ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å?',
        [RatingScore.Excellent]: '–©–æ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å?',
    }

    private readonly ratingLabelMap = {
        [RatingCategory.PublicService]: '–ó–∞–¥–æ–≤–æ–ª–µ–Ω—ñ –ø–æ—Å–ª—É–≥–æ—é –≤ –î—ñ—ó?',
        [RatingCategory.Document]: '–ó–∞–¥–æ–≤–æ–ª–µ–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–æ–º —É –î—ñ—ó?',
        [RatingCategory.DiiaId]: '–ó–∞–¥–æ–≤–æ–ª–µ–Ω—ñ –î—ñ—è.–ü—ñ–¥–ø–∏—Å?',
    }

    private readonly commentLabelMap = {
        [RatingCategory.PublicService]: '–Ø–∫ –º–æ–∂–Ω–∞ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É?',
        [RatingCategory.Document]: '–Ø–∫ –º–æ–∂–Ω–∞ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç?',
        [RatingCategory.DiiaId]: '–Ø–∫ –º–æ–∂–Ω–∞ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É?',
    }

    getRatingForm<T extends string>(
        formCode: RatingFormCode,
        category: RatingCategory,
        chipParams: ChipParams<T>,
        textParams?: TextParams,
        resourceId?: string,
    ): RatingForm {
        const { title, ratingLabel, chipLabels, chipDescription, commentLabel, commentHint, mainButton } = textParams || {}
        const { chipsRateGroups = [], chipValueMap, chipBlockRateGroups } = chipParams

        const chipValueMergedMap = Object.assign(this.chipCodeToValueDefaultMap, chipValueMap)

        return {
            formCode,
            resourceId,
            title: title || '–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏',
            rating: {
                label: ratingLabel || this.ratingLabelMap[category],
                items: [
                    { rate: RatingScore.Awful, emoji: 'üò°' },
                    { rate: RatingScore.Bad, emoji: 'üò¢' },
                    { rate: RatingScore.Ok, emoji: 'üòê' },
                    { rate: RatingScore.Good, emoji: 'üòÅ' },
                    { rate: RatingScore.Excellent, emoji: 'üòç' },
                ].map<RatingItem<T>>(({ rate, emoji }) => {
                    if (chipBlockRateGroups) {
                        const chipsBlockGroup = chipBlockRateGroups.find((group) => group.rate.includes(rate))
                        const { chipBlocks = [] } = chipsBlockGroup || {}

                        return {
                            rate,
                            emoji,
                            chip: { label: '', description: '', chips: [] },
                            chipBlocks,
                        }
                    }

                    const chipsRateGroup = chipsRateGroups.find((group) => group.rate.includes(rate))
                    const { chips = [] } = chipsRateGroup || {}
                    const chipItems = chips.map((chip) => ({
                        code: chip,
                        name: chipValueMergedMap[chip] || '',
                    }))

                    return {
                        rate,
                        emoji,
                        chip:
                            chipItems.length > 0
                                ? {
                                      label: chipLabels?.[rate] || this.chipLabelMap[rate],
                                      description: chipDescription ?? '–û–±–µ—Ä—ñ—Ç—å –æ–¥–∏–Ω –∞–±–æ –∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤.',
                                      chips: chipItems,
                                  }
                                : { label: '', description: '', chips: [] },
                    }
                }),
            },
            comment: {
                label: commentLabel || this.commentLabelMap[category],
                hint: commentHint || '–†–æ–∑–∫–∞–∂—ñ—Ç—å –±—ñ–ª—å—à–µ –ø—Ä–æ –≤—Ä–∞–∂–µ–Ω–Ω—è (–Ω–µ–æ–±–æ–≤ º—è–∑–∫–æ–≤–æ)',
            },
            mainButton: mainButton || '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫',
        }
    }
}
